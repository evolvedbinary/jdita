version: 2.1

parameters:
  node-image-tag:
    type: string
    default: "20.1.0"
  resource-class:
    type: string
    default: "small"
  pkg-manager:
    type: string
    default: "yarn-berry"
  pkg-cache-version:
    type: string
    default: "v4"

orbs:
  node: circleci/node@5.2.0
  coveralls: coveralls/coveralls@2.2.1

jobs:
  clone-and-install:
    docker:
      - image: cimg/node:<< pipeline.parameters.node-image-tag >>
    resource_class: << pipeline.parameters.resource-class >>
    steps:
      - checkout
      - node/install-packages:
          check-cache: always
          cache-version: << pipeline.parameters.pkg-cache-version >>
          pkg-manager: << pipeline.parameters.pkg-manager >>
          with-cache: false
  coverage:
    docker:
      - image: cimg/node:<< pipeline.parameters.node-image-tag >>
    resource_class: << pipeline.parameters.resource-class >>
    steps:
      - checkout
      - node/install-packages:
          check-cache: always
          cache-version: << pipeline.parameters.pkg-cache-version >>
          pkg-manager: << pipeline.parameters.pkg-manager >>
          with-cache: false
      - run:
          name: Run Code Coverage
          command: yarn coverage
      - run:
          name: Create Code Coverage lcov file
          command: yarn run nyc --reporter=text-lcov report > coverage.lcov
      - coveralls/upload:
          coverage_file: coverage.lcov

workflows:
  build-and-test:
    jobs:
      - clone-and-install
      - node/run:
          name: lint
          requires:
            - clone-and-install
          version: << pipeline.parameters.node-image-tag >>
          resource_class: << pipeline.parameters.resource-class >>
          pkg-manager: << pipeline.parameters.pkg-manager >>
          setup:
            - node/install-packages:
                check-cache: always
                cache-version: << pipeline.parameters.pkg-cache-version >>
                pkg-manager: << pipeline.parameters.pkg-manager >>
                with-cache: false
          yarn-run: lint
      - coverage:
          requires:
            - clone-and-install
      - node/run:
          name: generate docs
          requires:
            - clone-and-install
          version: << pipeline.parameters.node-image-tag >>
          resource_class: << pipeline.parameters.resource-class >>
          pkg-manager: << pipeline.parameters.pkg-manager >>
          setup:
            - node/install-packages:
                check-cache: always
                cache-version: << pipeline.parameters.pkg-cache-version >>
                pkg-manager: << pipeline.parameters.pkg-manager >>
                with-cache: false
          yarn-run: generate-docs
      - node/run:
          name: run example
          requires:
            - clone-and-install
          version: << pipeline.parameters.node-image-tag >>
          resource_class: << pipeline.parameters.resource-class >>
          pkg-manager: << pipeline.parameters.pkg-manager >>
          setup:
            - node/install-packages:
                check-cache: always
                cache-version: << pipeline.parameters.pkg-cache-version >>
                pkg-manager: << pipeline.parameters.pkg-manager >>
                with-cache: false
          yarn-run: example
